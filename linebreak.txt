// Line function for vertical bar dividers
var lineFunction = d3.line()
	.x(function(d) { return d.x; })
	.y(function(d) { return d.y; });
	
// Set Y axis domain based
var yAxisBreak = y1.domain()[0] > 0;

// Make the y axis squiggle break
if (yAxisBreak) {
	var periods = 4;
	var gap = (height - y1.range()[0])/((periods*4) + 2);
	var ali = 0.5;
	var dis = 7;
	var pth = [ {"x": y1.range()[1] + ali, "y": y1.range()[0]},
				{"x": y1.range()[1] + ali, "y": y1.range()[0] + gap }];
	
	// Generate points per num periods
	for(var i = 0; i < periods; i++) {
		for(var j= 1; j <= 4; j++) {
			pth.push({"x": y1.range()[1] + ali + (j % 2 != 0 ? (2 - j) * dis : 0), "y": y1.range()[0] + (gap*4*i) + gap*(j+1) });
		}
	}
	
	// Add end straight bit
	pth.push({"x": y1.range()[1] + ali, "y": y1.range()[0] + (gap*4*periods) + 2*gap});
	
	// Draw them points
	svg.selectAll(".squiggles")
		.data(pth)
		.enter().append("path")
		.attr("d", function(d, i) {
			if (i > 0) {
				return lineFunction([pth[i-1], d]);
			}
		})
		.attr("stroke", "black")      
		.attr("stroke-width", 1)
		.attr("fill", "none");
}

// Left Y Axis (% On Time)
svg.append("g")
	.call(d3.axisLeft(y1))
	.attr("class", "perOnTime")
	.selectAll("text")
	.attr("class", "axis-text");

if (yAxisBreak) {
	// Get rid of bottom tick
	var p = $(".perOnTime > path").attr("d");
	var i = p.replace("M-6", "M-0");
	$(".perOnTime > path").attr("d", i);
}